---
  - name: Create Group in RedHat/Debian
    group:
      name: "{{ item.groups }}"
      gid: "{{ item.gid }}"
      state: present
    loop: "{{ newgroup }}"
    ignore_errors: yes
    tags:
      - CreateGroup
    when: ansible_os_family != "Solaris"

  - name: Add Users into Group in RedHat/Debian [1/3]
    user:
      name: "{{ item.name }}"
      password: "{{ default_user_password | password_hash('sha512', 'A512') }}" 
      groups: "{{ item.groups }}"
      comment: "{{ item.comment }}"
      uid: "{{ item.uid }}"
      system: no
      shell: /bin/bash
      create_home: yes
      home: /home/{{ item.name }}
      update_password: on_create
      state: present
    loop: "{{ users }}"
    ignore_errors: yes
    register: Add_User_Succeed_RH
    tags:
      - AddGroupUser
    when: ansible_os_family != "Solaris"

  - name: Add Users into Group in RedHat/Debian [2/3]
    lineinfile:
      dest: /etc/group
      regexp: "^{{ item.name }}:x:"
      state: absent
    loop: "{{ users }}"
    ignore_errors: yes
    tags:
      - AddGroupUser
    when: ansible_os_family != "Solaris" and Add_User_Succeed_RH.changed

  - name: Add Users into Group in RedHat/Debian [3/3]
    replace:
      path: /etc/passwd
      regexp: "^{{ item.name }}:x:{{ item.uid }}:{{ item.uid }}"
      replace: '{{ item.name }}:x:{{ item.uid }}:{{ item.gid }}'
    loop: "{{ users }}"
    ignore_errors: yes
    tags:
      - AddGroupUser
    when: ansible_os_family != "Solaris" and Add_User_Succeed_RH.changed


  - name: Force Password Change On First Login in RedHat/Debian
    shell: chage -d 0 "{{ item.name }}"
    loop: "{{ users }}"
    ignore_errors: yes
    tags:
      - AddGroupUser
    when: ansible_os_family != "Solaris" and Add_User_Succeed_RH.changed

  - name: Create Group in Solaris
    command: 'groupadd -g {{ item.gid }} {{ item.groups }}'
    loop: "{{ newgroup }}"
    ignore_errors: yes
    tags:
      - CreateGroup
    when: ansible_os_family == "Solaris"

  - name: Create Users into Group in Solaris [1/2]
    command: 'useradd -u {{ item.uid }} -g {{ item.gid }} -c "{{ item.comment }}" -s /bin/sh -d /export/home/{{ item.name }} -m {{ item.name }}'
    loop: "{{ users }}"
    ignore_errors: yes
    register: Add_User_Succeed_Sol
    tags:
      - AddGroupUser
    when: ansible_os_family == "Solaris"

  - name: Create Users into Group in Solaris [2/2]
    command: 'usermod -a -G {{ item.groups }} {{ item.name }}'
    loop: "{{ users }}"
    ignore_errors: yes
    tags:
      - AddGroupUser
    when: ansible_os_family == "Solaris" and Add_User_Succeed_Sol.changed

  - name: Update Default Password For User Login in Solaris
    lineinfile:
      dest: /etc/shadow
      line: "{{ item.name }}:$6$A512$klyqdClFDi//y3HdIg.O5Sn8Ywnqjif/gP1BCohx4bJC69TPuqZK85NdzlOKVyDuZYm.aUy5Acy5MNo.DeRyD.:0:0:99999:7:::"
      regexp: "^{{ item.name }}"
    loop: "{{ users }}"
    ignore_errors: yes
    tags:
      - AddGroupUser
    when: ansible_os_family == "Solaris" and Add_User_Succeed_Sol.changed

  - name: Force Password Change On First Login in Solaris
    command: 'passwd -e {{ item.name }}'
    loop: "{{ users }}"
    ignore_errors: yes
    tags:
      - AddGroupUser
    when: ansible_os_family == "Solaris" and Add_User_Succeed_Sol.changed

  - name: Get SUDO Result For RedHat
    shell: cat /etc/group | grep -i 'sudo'
    ignore_errors: yes
    register: get_sudo
    tags:
      - GetSudoStatus
    when: ansible_os_family != "Solaris"
    
  - name: Get Wheel Result For Solaris
    shell: cat /etc/group | grep -i 'wheel'
    ignore_errors: yes
    register: get_wheel
    tags:
      - GetSudoStatus
    when: ansible_os_family == "Solaris" 
    
  - name: Output Result To File
    copy:
      content: "{{ get_sudo.stdout | to_nice_yaml }}"
      dest: "/{{ inventory_hostname }}.txt"
    ignore_errors: yes
    tags:
      - GetSudoStatus
    when: get_sudo.changed or get_wheel.changed

  - name: Append IP To Top Of The File
    lineinfile:
      path: "/{{ inventory_hostname }}.txt"
      insertbefore: BOF
      line: "{{  ansible_ssh_host }}"
    ignore_errors: yes
    tags: 
      - GetSudoStatus
    when: get_sudo.changed or get_wheel.changed
    
  - name: Fetch File To Ansible Master
    fetch:
      src: "/{{ inventory_hostname }}.txt"
      dest: "/ansible_tmp/"
      flat: yes
    ignore_errors: yes
    tags:
      - GetSudoStatus
    when: get_sudo.changed or get_wheel.changed
      
  - name: Merge All Result To A Single File [1/2]    become: false
    run_once: yes
    delegate_to: localhost
    shell: "cat /ansible_tmp/*.txt > /ansible_tmp/Final.log"
    ignore_errors: yes
    tags:
      - GetSudoStatus
    when: get_sudo.changed or get_wheel.changed

  - name: Merge All Result To A Single File [2/2]
    become: false
    run_once: yes
    delegate_to: localhost
    shell: "rm -rf /ansible_tmp/*.txt"
    ignore_errors: yes
    tags:
      - GetSudoStatus
    when: get_sudo.changed or get_wheel.changed
