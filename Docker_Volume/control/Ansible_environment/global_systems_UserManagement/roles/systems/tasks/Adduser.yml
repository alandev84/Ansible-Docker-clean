---
#For RH
  - name: Create Group
    block:
      - name: Create Group in RedHat/Debian [RH]
        group:
          name: "{{ item.groups }}"
          gid: "{{ item.gid }}"
          state: present
        loop: "{{ newgroup }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"
    always:
      - name: Initialisation [1/2] [RH]
        file:
          path: "{{ item.file_path_src_CreateGroup }}"
          state: absent
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Initialisation [2/2] [RH]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "rm -rf /Ansible_Event_Report/CreateGroup_Report.log"

      - name: Pull Result [1/4] [RH]
        become: true
        shell: "cat /etc/group > {{ item.file_path_src_CreateGroup }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Pull Result [2/4] [RH]
        lineinfile:
          path: "{{ item.file_path_src_CreateGroup }}"
          insertbefore: BOF
          line: "-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Pull Result [3/4] [RH]
        lineinfile:
          path: "{{ item.file_path_src_CreateGroup }}"
          insertbefore: BOF
          line: "HOSTNAME: {{ inventory_hostname }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Pull Result [4/4] [RH]
        lineinfile:
          path: "{{ item.file_path_src_CreateGroup }}"
          insertbefore: BOF
          line: "*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Extraction Processing [1/3] [RH]
        fetch:
          src: "{{ item.file_path_src_CreateGroup }}"
          dest: "{{ item.file_path_dest }}"
          flat: yes
        loop: "{{ collection }}"
        when: ansible_os_family != "Solaris"

      - name: Extraction Processing [2/3] [RH]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "cat {{ item.local_path }}*.txt > {{ item.local_path }}CreateGroup_Report.log"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Extraction Processing [3/3] [RH]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "rm -rf {{ item.local_path }}*.txt"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Generate Report
        ansible.builtin.debug:
          msg: "Output Result from {{ ansible_hostname }} Merge to /Ansible_Event_Report/CreateGroup_Report.log"
        when: ansible_os_family != "Solaris"
    tags:
      - CreateGroup

  - name: Add Users into Group
    block:
      - name: Add Users into Group in RedHat/Debian [1/4] [RH]
        user:
          name: "{{ item.name }}"
          password: "{{ default_user_password | password_hash('sha512', 'A512') }}" 
          groups: "{{ item.groups }}"
          comment: "{{ item.comment }}"
          uid: "{{ item.uid }}"
          system: no
          shell: /bin/bash
          create_home: yes
          home: /home/{{ item.name }}
          update_password: on_create
          state: present
        loop: "{{ users }}"
        async: 60
        poll: 0
        register: Add_User_Succeed_RH
        when: ansible_os_family != "Solaris"
    
      - name: Add Users into Group in RedHat/Debian [2/4] [RH]
        lineinfile:
          dest: /etc/group
          regexp: "^{{ item.name }}:x:"
          state: absent
        loop: "{{ users }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris" and Add_User_Succeed_RH.changed
    
      - name: Add Users into Group in RedHat/Debian [3/4] [RH]
        replace:
          path: /etc/passwd
          regexp: "^{{ item.name }}:x:{{ item.uid }}:{{ item.uid }}"
          replace: '{{ item.name }}:x:{{ item.uid }}:{{ item.primary_gid }}'
        loop: "{{ users }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris" and Add_User_Succeed_RH.changed
    
      - name: Add Users into Group in RedHat/Debian [4/4] [RH]
        command: "chown {{ item.name }}:{{ item.groups }} {{ item.home }}"
        loop: "{{ users }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris" and Add_User_Succeed_RH.changed
    
      - name: Force Password Change On First Login in RedHat/Debian [RH]
        shell: chage -d 0 "{{ item.name }}"
        loop: "{{ users }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris" and Add_User_Succeed_RH.changed
    always:
      - name: Initialisation [1/2] [RH]
        file:
          path: "{{ item.file_path_src_AddGroupUser }}"
          state: absent
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Initialisation [2/2] [RH]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "rm -rf /Ansible_Event_Report/AddGroupUser_Report.log"

      - name: Pull Result [1/6] [RH]
        become: true
        shell: "cat /etc/passwd > {{ item.file_path_src_AddGroupUser }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Pull Result [2/6] [RH]
        shell: 'echo "-------------------GROUP FILE-------------------" >> {{ item.file_path_src_AddGroupUser }}'
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Pull Result [3/6] [RH]
        become: true
        shell: "cat /etc/group >> {{ item.file_path_src_AddGroupUser }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Pull Result [4/6] [RH]
        lineinfile:
          path: "{{ item.file_path_src_AddGroupUser }}"
          insertbefore: BOF
          line: "-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Pull Result [5/6] [RH]
        lineinfile:
          path: "{{ item.file_path_src_AddGroupUser }}"
          insertbefore: BOF
          line: "HOSTNAME: {{ inventory_hostname }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Pull Result [6/6] [RH]
        lineinfile:
          path: "{{ item.file_path_src_AddGroupUser }}"
          insertbefore: BOF
          line: "*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Extraction Processing [1/3] [RH]
        fetch:
          src: "{{ item.file_path_src_AddGroupUser }}"
          dest: "{{ item.file_path_dest }}"
          flat: yes
        loop: "{{ collection }}"
        when: ansible_os_family != "Solaris"

      - name: Extraction Processing [2/3] [RH]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "cat {{ item.local_path }}*.txt > {{ item.local_path }}AddGroupUser_Report.log"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Extraction Processing [3/3] [RH]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "rm -rf {{ item.local_path }}*.txt"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"

      - name: Generate Report
        ansible.builtin.debug:
          msg: "Output Result from {{ ansible_hostname }} Merge to /Ansible_Event_Report/AddGroupUser_Report.log"
        when: ansible_os_family != "Solaris"
    tags:
      - AddGroupUser

#For Solaris
  - name: Create Group
    block:
      - name: Create Group in Solaris [Solaris]
        command: 'groupadd -g {{ item.gid }} {{ item.groups }}'
        loop: "{{ newgroup }}"
        async: 60
        poll: 0
        when: ansible_os_family != "Solaris"
    always:
      - name: Initialisation [Solaris]
        shell: "rm -rf {{ item.file_path_src_CreateGroup }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [1/4] [Solaris]
        become: true
        shell: 'echo "-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-" >> {{ item.file_path_src_CreateGroup }}'
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [2/4] [Solaris]
        become: true
        shell: 'echo "HOSTNAME: {{ inventory_hostname }}" >> {{ item.file_path_src_CreateGroup }}'  
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [3/4] [Solaris]
        become: true
        shell: 'echo  "*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*" >> {{ item.file_path_src_CreateGroup }}'
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [4/4] [Solaris]
        become: true
        shell: "cat /etc/group >> {{ item.file_path_src_CreateGroup }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

#need to change chown user {{ owner }}
      - name: Extraction Processing [1/4] [Solaris]
        become: true
        ansible.builtin.shell: "chown devops:devops {{ item.file_path_src_CreateGroup }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"
      
      - name: Extraction Processing [2/4] [Solaris]
        fetch:  
          src: "{{ item.file_path_src_CreateGroup }}"
          dest: "{{ item.local_path }}"
          flat: yes
        loop: "{{ collection }}"
        when: ansible_os_family == "Solaris"

      - name: Extraction Processing [3/4] [Solaris]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "cat {{ item.local_path }}*.txt > {{ item.local_path }}CreateGroup_Report.log"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Extraction Processing [4/4] [Solaris]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "rm -rf {{ item.local_path }}*.txt"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Generate Report
        ansible.builtin.debug:
          msg: "Output Result from {{ ansible_hostname }} Merge to /Ansible_Event_Report/CreateGroup_Report.log"
        when: ansible_os_family == "Solaris"

    tags:
      - CreateGroup

  - name: Add User into group
    block:
      - name: Create Users into Group in Solaris [1/3]
        command: 'useradd -u {{ item.uid }} -g {{ item.primary_gid }} -c "{{ item.comment }}" -s /bin/sh -d /export/home/{{ item.name }} -m {{ item.name }}'
        loop: "{{ users }}"
        async: 60
        poll: 0
        register: Add_User_Succeed_Sol
        when: ansible_os_family == "Solaris"
    
      - name: Create Users into Group in Solaris [2/3]
        command: 'usermod -a -G {{ item.groups }} {{ item.name }}'
        loop: "{{ users }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris" and Add_User_Succeed_Sol.changed
    
      - name: Create Users into Group in Solaris [3/3]
        command: "chown {{ item.name }}:{{ item.groups }} {{ item.home }}"
        loop: "{{ users }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris" and Add_User_Succeed_Sol.changed
    
      - name: Update Default Password For User Login in Solaris
        lineinfile:
          dest: /etc/shadow
          line: "{{ item.name }}:$6$A512$klyqdClFDi//y3HdIg.O5Sn8Ywnqjif/gP1BCohx4bJC69TPuqZK85NdzlOKVyDuZYm.aUy5Acy5MNo.DeRyD.:0:0:99999:7:::"
          regexp: "^{{ item.name }}"
        loop: "{{ users }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris" and Add_User_Succeed_Sol.changed
    
      - name: Force Password Change On First Login in Solaris
        command: 'passwd -e {{ item.name }}'
        loop: "{{ users }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris" and Add_User_Succeed_Sol.changed
    always:
      - name: Initialisation [Solaris]
        shell: "rm -rf {{ item.file_path_src_AddGroupUser }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [1/6] [Solaris]
        become: true
        shell: 'echo "-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-" >> {{ item.file_path_src_AddGroupUser }}'
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [2/6] [Solaris]
        become: true
        shell: 'echo "HOSTNAME: {{ inventory_hostname }}" >> {{ item.file_path_src_AddGroupUser }}'  
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [3/6] [Solaris]
        become: true
        shell: 'echo  "*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*" >> {{ item.file_path_src_AddGroupUser }}'
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [4/6] [Solaris]
        become: true
        shell: "cat /etc/passwd >> {{ item.file_path_src_AddGroupUser }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [5/6] [Solaris]
        become: true
        shell: 'echo "-------------------GROUP FILE-------------------" >> {{ item.file_path_src_AddGroupUser }}'
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Pull Result [6/6] [Solaris]
        become: true
        shell: "cat /etc/group >> {{ item.file_path_src_AddGroupUser }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

# have to change the permission, try {{ owner }}
      - name: Extraction Processing [1/4] [Solaris]
        become: true
        ansible.builtin.shell: "chown devops:devops {{ item.file_path_src_AddGroupUser }}"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Extraction Processing [2/4] [Solaris]
        fetch:
          src: "{{ item.file_path_src_AddGroupUser }}"
          dest: "{{ item.file_path_dest }}"
          flat: yes
        loop: "{{ collection }}"
        when: ansible_os_family == "Solaris"

      - name: Extraction Processing [3/4] [Solaris]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "cat {{ item.local_path }}*.txt > {{ item.local_path }}AddGroupUser_Report.log"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Extraction Processing [4/4] [Solaris]
        become: false
        run_once: yes
        delegate_to: localhost
        shell: "rm -rf {{ item.local_path }}*.txt"
        loop: "{{ collection }}"
        async: 60
        poll: 0
        when: ansible_os_family == "Solaris"

      - name: Generate Report
        ansible.builtin.debug:
          msg: "Output Result from {{ ansible_hostname }} Merge to /Ansible_Event_Report/AddGroupUser_Report.log"
        when: ansible_os_family == "Solaris"
    tags:
      - AddGroupUser
