---
#RH
  - name: Modify Users into Specific Group in RedHat [1/2]
    user:
      name: "{{ item.name }}"
      groups: "{{ item.groups }}"
      append: yes
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    register: Mod_User_Group_Succeed_RH
    tags:
      - ModUserGroup
    when: ansible_os_family != "Solaris"

  - name: Modify Users into Specific Group in RedHat [2/2]
    replace:
      path: /etc/passwd
      regexp: "^{{ item.name }}:x:{{ item.uid }}:\\d+"
      replace: '{{ item.name }}:x:{{ item.uid }}:{{ item.primary_gid }}'
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserGroup
    when: ansible_os_family != "Solaris" and Mod_User_Group_Succeed_RH.changed

  - name: Modify Users Comment in RedHat
    user:
      name: "{{ item.name }}"
      comment: "{{ item.comment }}"
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserComment
    when: ansible_os_family != "Solaris"

  - name: Modify Users UID in RedHat
    user:
      name: "{{ item.name }}"
      uid: "{{ item.uid }}"
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserUID
    when: ansible_os_family != "Solaris"

  - name: Modify Users UID in RedHat (FORCE)
    replace:
      path: /etc/passwd
      regexp: "^{{ item.name }}:x:\\d+"
      replace: '{{ item.name }}:x:{{ item.uid }}'
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserUIDForce
    when: ansible_os_family != "Solaris"

  - name: Modify UserName in RedHat
    command: 'usermod -l {{ item.new_name }} {{ item.name }}'
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserName
    when: ansible_os_family != "Solaris"

#Solaris
  - name: Create Users into Group in Solaris
    command: 'usermod -G {{ item.groups }} {{ item.name }}'
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserGroup
    when: ansible_os_family == "Solaris"

  - name: Modify Users Comment in Solaris
    command: 'usermod -c {{ item.comment }} {{ item.name }}'
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserComment
    when: ansible_os_family == "Solaris"

  - name: Modify Users UID in Solaris
    command: 'usermod -u {{ item.uid }} {{ item.name }}'
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserUID
    when: ansible_os_family == "Solaris"

  - name: Modify Users UID in Solaris (FORCE)
    lineinfile:
      dest: /etc/passwd
      line: "{{ item.name }}:x:{{ item.uid }}:{{ item.primary_gid }}:{{ item.comment }}:{{ item.home }}:{{ item.shell_path }}"
      regexp: "^{{ item.name }}:x:\\d+"
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserUIDForce
    when: ansible_os_family == "Solaris"

  - name: Modify UserName in Solaris
    command: 'usermod -l {{ item.new_name }} {{ item.name }}'
    loop: "{{ users }}"
    ignore_errors: yes
    async: 60
    poll: 0
    tags:
      - ModUserName
    when: ansible_os_family == "Solaris"
